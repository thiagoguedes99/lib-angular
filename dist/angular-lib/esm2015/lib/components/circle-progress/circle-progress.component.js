import { Component, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "ng-circle-progress";
export class CircleProgressComponent {
    constructor() {
        this.percent = 0;
    }
    ngOnInit() {
    }
    subtitleFormat(percent) {
        return `${percent}%`;
    }
}
CircleProgressComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.3", ngImport: i0, type: CircleProgressComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
CircleProgressComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.3", type: CircleProgressComponent, selector: "lib-circle-progress", inputs: { percent: "percent" }, ngImport: i0, template: "<circle-progress\n  [percent]='percent'\n  [radius]=\"60\"\n  [outerStrokeWidth]=\"10\"\n  [innerStrokeWidth]=\"20\"\n  [space]=\"-20\"\n  [outerStrokeColor]=\"'#4882c2'\"\n  [innerStrokeColor]=\"'#e7e8ea'\"\n  [showBackground]=\"false\"\n  [title]=\"subtitleFormat(percent)\"\n  [animateTitle]=\"true\"\n  [animation]=\"true\"\n  [showSubtitle]=\"false\"\n  [showUnits]=\"false\"\n  [clockwise]=\"false\"\n  [animationDuration]=\"1000\"\n  [startFromZero]=\"false\"\n  [outerStrokeGradient]=\"true\"\n  [outerStrokeGradientStopColor]=\"'#53a9ff'\"\n  [lazy]=\"false\"\n  [outerStrokeWidth]=\"20\"\n  [outerStrokeLinecap]=\"'butt'\"\n  [responsive]=\"true\"\n></circle-progress>", styles: [""], components: [{ type: i1.CircleProgressComponent, selector: "circle-progress", inputs: ["name", "class", "backgroundGradient", "backgroundColor", "backgroundGradientStopColor", "backgroundOpacity", "backgroundStroke", "backgroundStrokeWidth", "backgroundPadding", "radius", "space", "percent", "toFixed", "maxPercent", "renderOnClick", "units", "unitsFontSize", "unitsFontWeight", "unitsColor", "outerStrokeGradient", "outerStrokeWidth", "outerStrokeColor", "outerStrokeGradientStopColor", "outerStrokeLinecap", "innerStrokeColor", "innerStrokeWidth", "titleFormat", "title", "titleColor", "titleFontSize", "titleFontWeight", "subtitleFormat", "subtitle", "subtitleColor", "subtitleFontSize", "subtitleFontWeight", "imageSrc", "imageHeight", "imageWidth", "animation", "animateTitle", "animateSubtitle", "animationDuration", "showTitle", "showSubtitle", "showUnits", "showImage", "showBackground", "showInnerStroke", "clockwise", "responsive", "startFromZero", "showZeroOuterStroke", "lazy", "options"], outputs: ["onClick"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.3", ngImport: i0, type: CircleProgressComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'lib-circle-progress',
                    templateUrl: './circle-progress.component.html',
                    styleUrls: ['./circle-progress.component.css']
                }]
        }], ctorParameters: function () { return []; }, propDecorators: { percent: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2lyY2xlLXByb2dyZXNzLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2FuZ3VsYXItbGliL3NyYy9saWIvY29tcG9uZW50cy9jaXJjbGUtcHJvZ3Jlc3MvY2lyY2xlLXByb2dyZXNzLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2FuZ3VsYXItbGliL3NyYy9saWIvY29tcG9uZW50cy9jaXJjbGUtcHJvZ3Jlc3MvY2lyY2xlLXByb2dyZXNzLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDOzs7QUFPekQsTUFBTSxPQUFPLHVCQUF1QjtJQUlsQztRQUZTLFlBQU8sR0FBVyxDQUFDLENBQUM7SUFFYixDQUFDO0lBRWpCLFFBQVE7SUFDUixDQUFDO0lBRUQsY0FBYyxDQUFDLE9BQWU7UUFDNUIsT0FBTyxHQUFHLE9BQU8sR0FBRyxDQUFDO0lBQ3ZCLENBQUM7O29IQVhVLHVCQUF1Qjt3R0FBdkIsdUJBQXVCLDJGQ1BwQyx3cUJBdUJtQjsyRkRoQk4sdUJBQXVCO2tCQUxuQyxTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSxxQkFBcUI7b0JBQy9CLFdBQVcsRUFBRSxrQ0FBa0M7b0JBQy9DLFNBQVMsRUFBRSxDQUFDLGlDQUFpQyxDQUFDO2lCQUMvQzswRUFHVSxPQUFPO3NCQUFmLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbGliLWNpcmNsZS1wcm9ncmVzcycsXG4gIHRlbXBsYXRlVXJsOiAnLi9jaXJjbGUtcHJvZ3Jlc3MuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9jaXJjbGUtcHJvZ3Jlc3MuY29tcG9uZW50LmNzcyddXG59KVxuZXhwb3J0IGNsYXNzIENpcmNsZVByb2dyZXNzQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcblxuICBASW5wdXQoKSBwZXJjZW50OiBudW1iZXIgPSAwO1xuXG4gIGNvbnN0cnVjdG9yKCkgeyB9XG5cbiAgbmdPbkluaXQoKTogdm9pZCB7XG4gIH1cblxuICBzdWJ0aXRsZUZvcm1hdChwZXJjZW50OiBudW1iZXIpOiBzdHJpbmcge1xuICAgIHJldHVybiBgJHtwZXJjZW50fSVgO1xuICB9XG5cblxufVxuIiwiPGNpcmNsZS1wcm9ncmVzc1xuICBbcGVyY2VudF09J3BlcmNlbnQnXG4gIFtyYWRpdXNdPVwiNjBcIlxuICBbb3V0ZXJTdHJva2VXaWR0aF09XCIxMFwiXG4gIFtpbm5lclN0cm9rZVdpZHRoXT1cIjIwXCJcbiAgW3NwYWNlXT1cIi0yMFwiXG4gIFtvdXRlclN0cm9rZUNvbG9yXT1cIicjNDg4MmMyJ1wiXG4gIFtpbm5lclN0cm9rZUNvbG9yXT1cIicjZTdlOGVhJ1wiXG4gIFtzaG93QmFja2dyb3VuZF09XCJmYWxzZVwiXG4gIFt0aXRsZV09XCJzdWJ0aXRsZUZvcm1hdChwZXJjZW50KVwiXG4gIFthbmltYXRlVGl0bGVdPVwidHJ1ZVwiXG4gIFthbmltYXRpb25dPVwidHJ1ZVwiXG4gIFtzaG93U3VidGl0bGVdPVwiZmFsc2VcIlxuICBbc2hvd1VuaXRzXT1cImZhbHNlXCJcbiAgW2Nsb2Nrd2lzZV09XCJmYWxzZVwiXG4gIFthbmltYXRpb25EdXJhdGlvbl09XCIxMDAwXCJcbiAgW3N0YXJ0RnJvbVplcm9dPVwiZmFsc2VcIlxuICBbb3V0ZXJTdHJva2VHcmFkaWVudF09XCJ0cnVlXCJcbiAgW291dGVyU3Ryb2tlR3JhZGllbnRTdG9wQ29sb3JdPVwiJyM1M2E5ZmYnXCJcbiAgW2xhenldPVwiZmFsc2VcIlxuICBbb3V0ZXJTdHJva2VXaWR0aF09XCIyMFwiXG4gIFtvdXRlclN0cm9rZUxpbmVjYXBdPVwiJ2J1dHQnXCJcbiAgW3Jlc3BvbnNpdmVdPVwidHJ1ZVwiXG4+PC9jaXJjbGUtcHJvZ3Jlc3M+Il19